#############################################################################
# Makefile for building: SP-Elevator-Controller-System
# Generated by qmake (2.01a) (Qt 4.8.3) on: Sun Nov 18 01:33:59 2012
# Project:  SP-Elevator-Controller-System.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile SP-Elevator-Controller-System.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		ui/mainwindow.cpp \
		modules/request.c \
		modules/responder.c \
		modules/requestor.c \
		modules/data.c \
		modules/actioner.c \
		modules/FunctionQueue/fqueue.c \
		ui/outsidedialog.cpp moc_mainwindow.cpp \
		moc_outsidedialog.cpp
OBJECTS       = main.o \
		mainwindow.o \
		request.o \
		responder.o \
		requestor.o \
		data.o \
		actioner.o \
		fqueue.o \
		outsidedialog.o \
		moc_mainwindow.o \
		moc_outsidedialog.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		SP-Elevator-Controller-System.pro
QMAKE_TARGET  = SP-Elevator-Controller-System
DESTDIR       = 
TARGET        = SP-Elevator-Controller-System

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_outsidedialog.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: SP-Elevator-Controller-System.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile SP-Elevator-Controller-System.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile SP-Elevator-Controller-System.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/SP-Elevator-Controller-System1.0.0 || $(MKDIR) .tmp/SP-Elevator-Controller-System1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/SP-Elevator-Controller-System1.0.0/ && $(COPY_FILE) --parents ui/mainwindow.h modules/request.h modules/responder.h modules/requestor.h modules/data.h modules/actioner.h modules/FunctionQueue/fqueue.h ui/outsidedialog.h .tmp/SP-Elevator-Controller-System1.0.0/ && $(COPY_FILE) --parents main.cpp ui/mainwindow.cpp modules/request.c modules/responder.c modules/requestor.c modules/data.c modules/actioner.c modules/FunctionQueue/fqueue.c ui/outsidedialog.cpp .tmp/SP-Elevator-Controller-System1.0.0/ && $(COPY_FILE) --parents ui/mainwindow.ui ui/outsidedialog.ui .tmp/SP-Elevator-Controller-System1.0.0/ && (cd `dirname .tmp/SP-Elevator-Controller-System1.0.0` && $(TAR) SP-Elevator-Controller-System1.0.0.tar SP-Elevator-Controller-System1.0.0 && $(COMPRESS) SP-Elevator-Controller-System1.0.0.tar) && $(MOVE) `dirname .tmp/SP-Elevator-Controller-System1.0.0`/SP-Elevator-Controller-System1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/SP-Elevator-Controller-System1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_outsidedialog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_outsidedialog.cpp
moc_mainwindow.cpp: ui/mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ui/mainwindow.h -o moc_mainwindow.cpp

moc_outsidedialog.cpp: ui/outsidedialog.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ui/outsidedialog.h -o moc_outsidedialog.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_outsidedialog.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_outsidedialog.h
ui_mainwindow.h: ui/mainwindow.ui
	/usr/bin/uic ui/mainwindow.ui -o ui_mainwindow.h

ui_outsidedialog.h: ui/outsidedialog.ui
	/usr/bin/uic ui/outsidedialog.ui -o ui_outsidedialog.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp ui/mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: ui/mainwindow.cpp ui/mainwindow.h \
		ui_mainwindow.h \
		ui/outsidedialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o ui/mainwindow.cpp

request.o: modules/request.c modules/request.h \
		modules/data.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o request.o modules/request.c

responder.o: modules/responder.c modules/responder.h \
		modules/data.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o responder.o modules/responder.c

requestor.o: modules/requestor.c modules/requestor.h \
		modules/data.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o requestor.o modules/requestor.c

data.o: modules/data.c modules/data.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o data.o modules/data.c

actioner.o: modules/actioner.c modules/actioner.h \
		modules/data.h \
		modules/planner.h \
		modules/FunctionQueue/fqueue.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o actioner.o modules/actioner.c

fqueue.o: modules/FunctionQueue/fqueue.c modules/FunctionQueue/fqueue.h \
		modules/data.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o fqueue.o modules/FunctionQueue/fqueue.c

outsidedialog.o: ui/outsidedialog.cpp ui/outsidedialog.h \
		ui_outsidedialog.h \
		modules/data.h \
		modules/request.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o outsidedialog.o ui/outsidedialog.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_outsidedialog.o: moc_outsidedialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_outsidedialog.o moc_outsidedialog.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

